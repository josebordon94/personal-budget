[{"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\index.js":"1","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\App.js":"2","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\ThemeUI.js":"3","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Navbar.js":"4","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Operations.js":"5","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\OperationForm.js":"6","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\LastOperations.js":"7","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Balance.js":"8","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\LoggedUserHeader.js":"9","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Login.js":"10","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Routing.js":"11","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\services\\apirest.js":"12","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\CustomizedSnackbar.js":"13","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Progress.js":"14","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\NavbarUnregistered.js":"15","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\SignUp.js":"16","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Help.js":"17","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\OperationHistory.js":"18","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Home.js":"19","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Drawer.js":"20","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\DrawerList.js":"21"},{"size":142,"mtime":1624264524164,"results":"22","hashOfConfig":"23"},{"size":362,"mtime":1624109509310,"results":"24","hashOfConfig":"23"},{"size":1036,"mtime":1624191568742,"results":"25","hashOfConfig":"23"},{"size":1789,"mtime":1624174605372,"results":"26","hashOfConfig":"23"},{"size":4193,"mtime":1624264460822,"results":"27","hashOfConfig":"23"},{"size":6044,"mtime":1624264392590,"results":"28","hashOfConfig":"23"},{"size":2953,"mtime":1624264420037,"results":"29","hashOfConfig":"23"},{"size":1462,"mtime":1624254288491,"results":"30","hashOfConfig":"23"},{"size":615,"mtime":1624264857392,"results":"31","hashOfConfig":"23"},{"size":4067,"mtime":1624264448456,"results":"32","hashOfConfig":"23"},{"size":1268,"mtime":1624264694556,"results":"33","hashOfConfig":"23"},{"size":89,"mtime":1624104506165,"results":"34","hashOfConfig":"23"},{"size":1255,"mtime":1623892697439,"results":"35","hashOfConfig":"23"},{"size":610,"mtime":1623895952811,"results":"36","hashOfConfig":"23"},{"size":1372,"mtime":1624253025552,"results":"37","hashOfConfig":"23"},{"size":4998,"mtime":1624264485640,"results":"38","hashOfConfig":"23"},{"size":6827,"mtime":1624253208172,"results":"39","hashOfConfig":"23"},{"size":6569,"mtime":1624264355024,"results":"40","hashOfConfig":"23"},{"size":2455,"mtime":1624264715554,"results":"41","hashOfConfig":"23"},{"size":893,"mtime":1624265017354,"results":"42","hashOfConfig":"23"},{"size":1796,"mtime":1624264946623,"results":"43","hashOfConfig":"23"},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},"1a5ydim",{"filePath":"47","messages":"48","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51","usedDeprecatedRules":"46"},{"filePath":"52","messages":"53","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"54","messages":"55","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56","usedDeprecatedRules":"46"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"59","messages":"60","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61","usedDeprecatedRules":"46"},{"filePath":"62","messages":"63","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"64","usedDeprecatedRules":"46"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"46"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"46"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"73","messages":"74","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"46"},{"filePath":"76","messages":"77","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"78","usedDeprecatedRules":"46"},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"81","messages":"82","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"83","usedDeprecatedRules":"46"},{"filePath":"84","messages":"85","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"86","usedDeprecatedRules":"46"},{"filePath":"87","messages":"88","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"89","usedDeprecatedRules":"46"},{"filePath":"90","messages":"91","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"92","messages":"93","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"46"},{"filePath":"94","messages":"95","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"96","messages":"97","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\index.js",[],["98","99"],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\App.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\ThemeUI.js",["100","101","102"],"import { createMuiTheme } from '@material-ui/core/styles'\r\nimport { indigo, deepOrange, grey } from '@material-ui/core/colors'\r\nconst theme = createMuiTheme({\r\n  palette: {\r\n    background: {\r\n      default: grey[200],\r\n    },\r\n    primary: {\r\n      main: indigo[900],\r\n    },\r\n    secondary: {\r\n      main: deepOrange[800],\r\n    },\r\n    black: {\r\n      main: indigo[800],\r\n    },\r\n  },\r\n  typography: {\r\n    allVariants: {\r\n      color: 'black',\r\n    },\r\n    h1: {\r\n      fontSize: '2rem',\r\n      marginBottom: '0.3rem',\r\n      textAlign: 'left',\r\n      color: 'black',\r\n      marginBottom: '0.2em',\r\n    },\r\n    h2: {\r\n      fontSize: '1.5rem',\r\n      marginBottom: '0.3rem',\r\n      textAlign: 'left',\r\n      color: 'black',\r\n      marginTop: '0.5em',\r\n      marginBottom: '0.2em',\r\n    },\r\n    h3: {\r\n      fontSize: '1.2rem',\r\n      marginBottom: '0.3rem',\r\n      textAlign: 'left',\r\n      color: 'black',\r\n      marginTop: '0.5em',\r\n      marginBottom: '0.2em',\r\n      fontStyle: 'italic',\r\n    },\r\n  },\r\n})\r\nexport default theme\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Navbar.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Operations.js",["103","104"],"import React, { useEffect, useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Paper, Grid, Typography } from '@material-ui/core/'\r\nimport OperationForm from '../components/OperationForm'\r\nimport OperationHistory from '../components/OperationHistory'\r\nimport LoggedUserHeader from '../components/LoggedUserHeader'\r\nimport axios from 'axios'\r\nimport apirest from '../services/apirest'\r\nimport Progress from '../components/Progress'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(2),\r\n    textAlign: 'center',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  paperTable: {\r\n    padding: theme.spacing(0),\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  sectionTitle: {\r\n    display: 'flex',\r\n    flexDirection: 'flexRow',\r\n    alignItems: 'center',\r\n    fontSize: '3rem',\r\n    marginBottom: '0.1em',\r\n    color: 'black',\r\n  },\r\n  sectionSubTitle: {\r\n    fontSize: '2rem',\r\n    marginBottom: '0rem',\r\n    textAlign: 'left',\r\n    color: 'black',\r\n  },\r\n  large: {\r\n    width: '5rem',\r\n    height: '5rem',\r\n  },\r\n  fullColumn: {\r\n    height: '100%',\r\n  },\r\n  balanceText: {\r\n    fontSize: '5rem',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n    padding: theme.spacing(0),\r\n  },\r\n  historyTitle: {\r\n    paddingTop: theme.spacing(3),\r\n    paddingLeft: theme.spacing(3),\r\n    paddingBottom: theme.spacing(1),\r\n  },\r\n}))\r\n\r\nconst Operations = () => {\r\n  const jwt = localStorage.getItem('jwt')\r\n  const classes = useStyles()\r\n  const [ops, setOps] = useState([])\r\n  const [loading, setLoading] = useState(true)\r\n  const [reload, setReload] = useState(false)\r\n  const user_id = localStorage.getItem('user_id')\r\n  const reFetch = () => {\r\n    setReload(!reload)\r\n  }\r\n  const getOperations = async () => {\r\n    let config = {\r\n      headers: {\r\n        'x-access-token': jwt,\r\n      },\r\n    }\r\n    const res = await axios.get(\r\n      apirest.apiUrl + '/operations/' + user_id,\r\n      config,\r\n    )\r\n    await new Promise((resolve) =>\r\n      setTimeout(resolve, apirest.simulationRequestDelay),\r\n    )\r\n    setOps(res.data)\r\n    setLoading(false)\r\n  }\r\n  useEffect(async () => {\r\n    setLoading(true)\r\n    getOperations()\r\n    renderTable()\r\n  }, [reload])\r\n\r\n  const renderTable = () => {\r\n    if (loading) {\r\n      return <Progress />\r\n    } else {\r\n      return (\r\n        <OperationHistory\r\n          ops={ops}\r\n          loading={loading}\r\n          reFetch={reFetch}\r\n          setLoading={setLoading}\r\n        />\r\n      )\r\n    }\r\n  }\r\n  return (\r\n    <>\r\n      <LoggedUserHeader />\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar}></div>\r\n        <div className={classes.sectionTitle}>\r\n          <Typography\r\n            variant=\"h1\"\r\n            color=\"initial\"\r\n            className={classes.sectionTitle}\r\n          >\r\n            Operaciones\r\n          </Typography>\r\n        </div>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography\r\n                variant=\"h2\"\r\n                color=\"initial\"\r\n                className={classes.sectionSubTitle}\r\n              >\r\n                Realizar una operación\r\n              </Typography>\r\n              <OperationForm reFetch={reFetch} />\r\n            </Paper>\r\n          </Grid>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paperTable} style={{ marginTop: '25px' }}>\r\n              <Typography\r\n                variant=\"h2\"\r\n                color=\"initial\"\r\n                className={classes.historyTitle + ' ' + classes.sectionSubTitle}\r\n              >\r\n                Historial\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"initial\"\r\n                style={{ marginLeft: '1.6em' }}\r\n              >\r\n                Puede editar el concepto y el monto de cada operación.\r\n              </Typography>\r\n              {renderTable()}\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Operations\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\OperationForm.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\LastOperations.js",["105"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport apirest from '../services/apirest'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 300,\r\n    fontWeight: 'bold',\r\n    ' & tr td, tr th': {\r\n      fontSize: '1.1em',\r\n    },\r\n  },\r\n  income: {\r\n    color: 'green',\r\n  },\r\n  outcome: {\r\n    color: 'red',\r\n  },\r\n})\r\n\r\nfunction createData(id, concept, mount, type, date) {\r\n  return { id, concept, mount, type, date }\r\n}\r\n\r\nexport default function LastOperations() {\r\n  const [rows, setRows] = useState([])\r\n  const jwt = localStorage.getItem('jwt')\r\n  useEffect(() => {\r\n    const user_id = localStorage.getItem('user_id')\r\n    const getData = async function () {\r\n      let newRows = []\r\n      let config = {\r\n        headers: {\r\n          'x-access-token': jwt,\r\n        },\r\n      }\r\n      const res = await axios.get(\r\n        apirest.apiUrl + '/operations/last/' + user_id,\r\n        config,\r\n      )\r\n      res.data.forEach((element) => {\r\n        newRows.push(\r\n          createData(\r\n            element._id,\r\n            element.concept,\r\n            element.mount,\r\n            element.type,\r\n            element.date,\r\n          ),\r\n        )\r\n      })\r\n      setRows(newRows)\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"medium\" aria-label=\"a dense table\">\r\n        {rows.length > 0 ? (\r\n          ''\r\n        ) : (\r\n          <caption>No hay registros para mostrar.</caption>\r\n        )}\r\n\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Concepto</TableCell>\r\n            <TableCell align=\"right\">Importe</TableCell>\r\n            <TableCell align=\"right\">Fecha</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.concept}\r\n              </TableCell>\r\n              <TableCell\r\n                align=\"right\"\r\n                className={row.type === 1 ? classes.income : classes.outcome}\r\n              >\r\n                {row.type === 1 ? '+' : '-'}\r\n                {row.mount}\r\n              </TableCell>\r\n              <TableCell align=\"right\">\r\n                {row.date.split('T')[0].replaceAll('-', '/')}\r\n              </TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Balance.js",["106"],"import React, { useEffect, useState } from 'react'\r\nimport axios from 'axios'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Typography } from '@material-ui/core'\r\nimport apirest from '../services/apirest'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  balanceText: {\r\n    fontSize: '4rem',\r\n  },\r\n  expense: {\r\n    color: 'red',\r\n  },\r\n}))\r\n\r\nconst Balance = () => {\r\n  const classes = useStyles()\r\n  const [mount, setMount] = useState()\r\n  const jwt = localStorage.getItem('jwt')\r\n  useEffect(() => {\r\n    let config = {\r\n      headers: {\r\n        'x-access-token': jwt,\r\n      },\r\n    }\r\n    const user_id = localStorage.getItem('user_id')\r\n    const getData = async (user) => {\r\n      const res = await axios.get(\r\n        apirest.apiUrl + '/operations/balance/' + user,\r\n        config,\r\n      )\r\n      setMount(res.data)\r\n    }\r\n    getData(user_id)\r\n  }, [])\r\n  if (mount >= 0) {\r\n    return (\r\n      <>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"primary\"\r\n          align=\"justify\"\r\n          className={classes.balanceText}\r\n        >\r\n          $ {mount}\r\n        </Typography>\r\n      </>\r\n    )\r\n  } else {\r\n    return (\r\n      <>\r\n        <Typography\r\n          variant=\"body1\"\r\n          color=\"primary\"\r\n          align=\"justify\"\r\n          className={`${classes.balanceText} ${classes.expense}`}\r\n        >\r\n          $ {mount}\r\n        </Typography>\r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Balance\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\LoggedUserHeader.js",["107"],"import React from 'react'\r\nimport { Hidden, makeStyles } from '@material-ui/core'\r\nimport Navbar from './Navbar'\r\nimport Drawer from './Drawer'\r\n\r\nconst LoggedUsedHeader = () => {\r\n  const [abrir, setAbrir] = React.useState(false)\r\n\r\n  const accionAbrir = () => {\r\n    setAbrir(!abrir)\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Navbar accionAbrir={accionAbrir} />\r\n      <Hidden smDown>\r\n        <Drawer variant=\"permanent\" open={true} />\r\n      </Hidden>\r\n      <Hidden mdUp>\r\n        <Drawer variant=\"temporary\" open={abrir} onClose={accionAbrir} />\r\n      </Hidden>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default LoggedUsedHeader\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Login.js",["108"],"import React, { useState, useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport { Link } from 'react-router-dom'\r\nimport UILink from '@material-ui/core/Link'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Typography from '@material-ui/core/Typography'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Container from '@material-ui/core/Container'\r\nimport axios from 'axios'\r\nimport { Redirect } from 'react-router-dom'\r\nimport apirest from '../services/apirest'\r\nimport NavbarUnregistered from '../components/NavbarUnregistered'\r\nimport ExitToAppIcon from '@material-ui/icons/ExitToApp'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(11),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  submit: {\r\n    margin: theme.spacing(3, 0, 2),\r\n  },\r\n  errorMsg: {\r\n    color: 'red',\r\n    fontSize: '9em',\r\n  },\r\n  link: {\r\n    fontSize: '18px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      fontStyle: 'none',\r\n      color: 'blue',\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function Login() {\r\n  const classes = useStyles()\r\n\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n  })\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const [redirect, setRedirect] = useState(false)\r\n\r\n  const handleInputChange = (event) => {\r\n    setFormData({\r\n      ...formData,\r\n      [event.target.name]: event.target.value,\r\n    })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    const loginData = {\r\n      email: formData.email,\r\n      password: formData.password,\r\n    }\r\n    axios.post(apirest.apiUrl + '/users/login', loginData).then((res) => {\r\n      if (res.data.error) {\r\n        console.log('Autentication error')\r\n        setErrorMsg(res.data.message)\r\n      } else {\r\n        localStorage.setItem('jwt', res.data.token)\r\n        localStorage.setItem('email', loginData.email)\r\n        localStorage.setItem('user_id', res.data.user_id)\r\n        localStorage.setItem('user_name', res.data.user_name)\r\n        setErrorMsg('')\r\n        setRedirect(true)\r\n      }\r\n    })\r\n  }\r\n\r\n  if (redirect) {\r\n    return <Redirect to=\"/home\" />\r\n  }\r\n  return (\r\n    <>\r\n      <NavbarUnregistered />\r\n      <Container component=\"main\" maxWidth=\"xs\">\r\n        <div className={classes.paper}>\r\n          <Typography component=\"h1\" variant=\"h5\">\r\n            Iniciar sesión\r\n          </Typography>\r\n          <form className={classes.form} noValidate onSubmit={handleSubmit}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              id=\"email\"\r\n              label=\"E-mail\"\r\n              name=\"email\"\r\n              autoComplete=\"email\"\r\n              autoFocus\r\n              onChange={handleInputChange}\r\n            />\r\n            <TextField\r\n              variant=\"outlined\"\r\n              margin=\"normal\"\r\n              fullWidth\r\n              name=\"password\"\r\n              label=\"Contraseña\"\r\n              type=\"password\"\r\n              id=\"password\"\r\n              autoComplete=\"current-password\"\r\n              onChange={handleInputChange}\r\n            />\r\n            <Typography color=\"secondary\">{errorMsg}</Typography>\r\n            <Button\r\n              type=\"submit\"\r\n              fullWidth\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              className={classes.submit}\r\n              startIcon={<ExitToAppIcon />}\r\n            >\r\n              Iniciar sesión\r\n            </Button>\r\n          </form>\r\n          <Grid container>\r\n            <Grid item xs>\r\n              <UILink component=\"button\" className={classes.link}>\r\n                <Link to=\"/signUp\">¿No tiene un usuario? Regístrese aquí.</Link>\r\n              </UILink>\r\n            </Grid>\r\n          </Grid>\r\n        </div>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Routing.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\services\\apirest.js",["109"],"export default {\r\n  apiUrl: 'http://localhost:4000',\r\n  simulationRequestDelay: 200,\r\n}\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\CustomizedSnackbar.js",["110","111","112"],"import React, { useEffect } from 'react'\r\nimport Button from '@material-ui/core/Button'\r\nimport Snackbar from '@material-ui/core/Snackbar'\r\nimport MuiAlert from '@material-ui/lab/Alert'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\n\r\nfunction Alert(props) {\r\n  return <MuiAlert elevation={6} variant=\"filled\" {...props} />\r\n}\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    '& > * + *': {\r\n      marginTop: theme.spacing(2),\r\n    },\r\n  },\r\n}))\r\n\r\nexport default function CustomizedSnackbars(props) {\r\n  const classes = useStyles()\r\n  const [open, setOpen] = React.useState(false)\r\n\r\n  useEffect(() => {\r\n    if (props.openSnackbar === true) {\r\n      setOpen(true)\r\n      props.setOpenSnackbar(false)\r\n    }\r\n  }, [props.openSnackbar])\r\n\r\n  const handleClick = () => {\r\n    setOpen(true)\r\n  }\r\n\r\n  const handleClose = (event, reason) => {\r\n    if (reason === 'clickaway') {\r\n      return\r\n    }\r\n\r\n    setOpen(false)\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Snackbar open={open} autoHideDuration={2000} onClose={handleClose}>\r\n        <Alert onClose={handleClose} severity=\"success\">\r\n          Operación registrada correctamente!\r\n        </Alert>\r\n      </Snackbar>\r\n    </div>\r\n  )\r\n}\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Progress.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\NavbarUnregistered.js",["113"],"import {\r\n  AppBar,\r\n  Toolbar,\r\n  Typography,\r\n  makeStyles,\r\n  IconButton,\r\n} from '@material-ui/core'\r\n\r\nimport React from 'react'\r\nimport MenuIcon from '@material-ui/icons/Menu'\r\nimport GitHubIcon from '@material-ui/icons/GitHub'\r\nimport LinkedInIcon from '@material-ui/icons/LinkedIn'\r\nimport AccountBalanceWalletIcon from '@material-ui/icons/AccountBalanceWallet'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  title: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n    flexDirection: 'row',\r\n    alignItems: 'center',\r\n    marginLeft: '3px',\r\n  },\r\n  appBar: { marginBottom: '500px' },\r\n}))\r\n\r\nconst NavbarUnregistered = (props) => {\r\n  const classes = useStyles()\r\n  return (\r\n    <AppBar className={classes.appBar}>\r\n      <Toolbar>\r\n        <AccountBalanceWalletIcon />\r\n        <Typography variant=\"h6\" className={classes.title} color=\"inherit\">\r\n          Mi presupuesto\r\n        </Typography>\r\n        <IconButton\r\n          aria-label=\"delete\"\r\n          color=\"inherit\"\r\n          href=\"https://github.com/josebordon94\"\r\n        >\r\n          <GitHubIcon />\r\n        </IconButton>\r\n        <IconButton\r\n          aria-label=\"delete\"\r\n          color=\"inherit\"\r\n          href=\"https://www.linkedin.com/in/josebordon94/\"\r\n        >\r\n          <LinkedInIcon />\r\n        </IconButton>\r\n      </Toolbar>\r\n    </AppBar>\r\n  )\r\n}\r\n\r\nexport default NavbarUnregistered\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\SignUp.js",["114","115"],"import React, { useState } from 'react'\r\nimport { makeStyles, Container, Typography } from '@material-ui/core'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Button from '@material-ui/core/Button'\r\nimport { useForm, Controller } from 'react-hook-form'\r\nimport NavbarUnregistered from '../components/NavbarUnregistered'\r\nimport { Link, Redirect, useHistory } from 'react-router-dom'\r\nimport UILink from '@material-ui/core/Link'\r\nimport apirest from '../services/apirest'\r\nimport axios from 'axios'\r\nimport AssignmentIndIcon from '@material-ui/icons/AssignmentInd'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    marginTop: theme.spacing(11),\r\n    display: 'flex',\r\n    flexDirection: 'column',\r\n    alignItems: 'center',\r\n  },\r\n  form: {\r\n    width: '100%', // Fix IE 11 issue.\r\n  },\r\n  field: {\r\n    marginTop: '1.2em',\r\n  },\r\n  link: {\r\n    marginTop: '15px',\r\n    fontSize: '18px',\r\n    textAlign: 'center',\r\n    textDecoration: 'none',\r\n    '& a': {\r\n      textDecoration: 'none',\r\n      fontStyle: 'none',\r\n      color: 'blue',\r\n    },\r\n  },\r\n}))\r\n\r\nconst SignUp = ({ handleClose }) => {\r\n  let history = useHistory()\r\n  const [errorMsg, setErrorMsg] = useState('')\r\n  const classes = useStyles()\r\n  const { handleSubmit, control } = useForm()\r\n\r\n  const onSubmit = (data) => {\r\n    const createUser = () => {\r\n      axios.post(apirest.apiUrl + '/users', data).then((res) => {\r\n        if (res.data.error) {\r\n          console.log('Invalid data')\r\n          setErrorMsg(res.data.message)\r\n        } else {\r\n          setErrorMsg('')\r\n          return history.push('/login') // redirect\r\n        }\r\n      })\r\n    }\r\n    createUser()\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <NavbarUnregistered />\r\n      <Container component=\"main\" maxWidth=\"xs\" className={classes.paper}>\r\n        <Typography component=\"h1\" variant=\"h5\">\r\n          Formulario de registro\r\n        </Typography>\r\n        <form\r\n          className={classes.form}\r\n          noValidate\r\n          onSubmit={handleSubmit(onSubmit)}\r\n        >\r\n          <Controller\r\n            name=\"name\"\r\n            control={control}\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                variant=\"outlined\"\r\n                margin=\"normal\"\r\n                fullWidth\r\n                id=\"name\"\r\n                label=\"Nombre y apellido\"\r\n                autoFocus\r\n                onChange={onChange}\r\n                error={!!error}\r\n                helperText={\r\n                  error\r\n                    ? 'Este campo es obligatorio. Cuatro caracteres como mínimo.'\r\n                    : ''\r\n                }\r\n                className={classes.field}\r\n              />\r\n            )}\r\n            rules={{ required: 'Este campo es obligatorio', minLength: 4 }}\r\n          />\r\n          <Controller\r\n            name=\"email\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                label=\"Email\"\r\n                variant=\"outlined\"\r\n                fullWidth\r\n                value={value}\r\n                onChange={onChange}\r\n                error={!!error}\r\n                helperText={error ? 'Debe ingresar un email válido.' : ''}\r\n                type=\"email\"\r\n                className={classes.field}\r\n              />\r\n            )}\r\n            rules={{\r\n              required: 'Este campo es obligatorio.',\r\n              pattern: /^[\\w-\\.]+@([\\w-]+\\.)+[\\w-]{2,4}$/,\r\n            }}\r\n          />\r\n          <Controller\r\n            name=\"password\"\r\n            control={control}\r\n            defaultValue=\"\"\r\n            render={({ field: { onChange, value }, fieldState: { error } }) => (\r\n              <TextField\r\n                label=\"Password\"\r\n                variant=\"outlined\"\r\n                value={value}\r\n                onChange={onChange}\r\n                fullWidth\r\n                error={!!error}\r\n                helperText={\r\n                  error ? 'Debe ingresar una contraseña de 4 a 16 dígitos.' : ''\r\n                }\r\n                type=\"password\"\r\n                className={classes.field}\r\n              />\r\n            )}\r\n            rules={{\r\n              required: 'Campo obligatorio',\r\n              minLength: 4,\r\n              maxLength: 16,\r\n            }}\r\n          />\r\n          <Button\r\n            type=\"submit\"\r\n            fullWidth\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            className={classes.field}\r\n            startIcon={<AssignmentIndIcon />}\r\n          >\r\n            Registrarse\r\n          </Button>\r\n        </form>\r\n        <Typography color=\"secondary\">{errorMsg}</Typography>\r\n        <UILink component=\"button\" className={classes.link}>\r\n          <Link to=\"/login\">¿Ya tiene un usuario? Inicie sesión aquí.</Link>\r\n        </UILink>\r\n      </Container>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default SignUp\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Help.js",["116","117"],"import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport { Paper, Grid, Typography } from '@material-ui/core/'\r\nimport LoggedUserHeader from '../components/LoggedUserHeader'\r\nimport LabelImportantIcon from '@material-ui/icons/LabelImportant'\r\nimport AccountBalanceIcon from '@material-ui/icons/AccountBalance'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    flexGrow: 1,\r\n    display: 'flex',\r\n  },\r\n  paper: {\r\n    padding: theme.spacing(3),\r\n    textAlign: 'justified',\r\n    color: theme.palette.text.secondary,\r\n  },\r\n  userName: {\r\n    fontSize: '1.3rem',\r\n    marginBottom: '0.3rem',\r\n    textAlign: 'left',\r\n    color: 'black',\r\n  },\r\n  fullColumn: {\r\n    height: '100%',\r\n  },\r\n  content: {\r\n    flexGrow: 1,\r\n    backgroundColor: theme.palette.background.default,\r\n  },\r\n  toolbar: theme.mixins.toolbar,\r\n  helpList: {\r\n    color: 'black',\r\n    '& li': {\r\n      listStyleType: 'square',\r\n    },\r\n  },\r\n}))\r\n\r\nconst Help = () => {\r\n  const classes = useStyles()\r\n  return (\r\n    <>\r\n      <LoggedUserHeader />\r\n      <div className={classes.content}>\r\n        <div className={classes.toolbar}></div>\r\n        <Grid container spacing={0}>\r\n          <Grid item xs={12}>\r\n            <Paper className={classes.paper}>\r\n              <Typography variant=\"h1\" color=\"initial\">\r\n                Sección de ayuda\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                \"Mi presupuesto\" es una aplicación web sencilla dónde podrá\r\n                llevar un seguimiento de sus ingresos y egresos personales de\r\n                dinero. En esta sección se presenta una descripción de las\r\n                tareas que puede realizar en el sistema.\r\n              </Typography>\r\n              <Typography variant=\"h2\" color=\"initial\">\r\n                1. Sección \"Mi cuenta\"\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                En esta sección podrá acceder a un resúmen de su actividad.\r\n                Presenta dos apartados:\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"initial\"\r\n                style={{ marginLeft: '12px' }}\r\n              >\r\n                <b>1) Balance:</b> la cantidad de dinero total que dispone. La\r\n                misma se calcula sumando todos los ingresos y restando todos los\r\n                egresos registrados en su cuenta.\r\n              </Typography>\r\n              <Typography\r\n                variant=\"body1\"\r\n                color=\"initial\"\r\n                style={{ marginLeft: '12px' }}\r\n              >\r\n                <b>2) Últimas operaciones:</b> consiste en una tabla dónde se\r\n                muestran las últimas 10 operaciones registradas en su cuenta.\r\n              </Typography>\r\n              <Typography variant=\"h2\" color=\"initial\">\r\n                2. Sección \"Operaciones\"\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                Desde esta sección podrá registrar nuevas operaciones, tanto\r\n                ingresos como egresos, y revisar todo su historial de\r\n                operaciones anterior. Para lo mismo se dispone de dos apartados:\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                color=\"initial\"\r\n                style={{ marginLeft: '12px' }}\r\n              >\r\n                Formulario de nueva operación\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                Completando este formulario se procederá a registrar una nueva\r\n                operación en su cuenta. Debe ingresar los campos de:\r\n              </Typography>\r\n              <ul className={classes.helpList}>\r\n                <li>\r\n                  <b>Concepto:</b> descripción de la operación.\r\n                </li>\r\n                <li>\r\n                  <b>Monto:</b> cifra correspondiente al importe de la\r\n                  operación. Debe ser un número positivo, y se permiten dos\r\n                  decimales para expresar los centavos.\r\n                </li>\r\n                <li>\r\n                  <b>Tipo:</b> identifica la operación como Ingreso o Egreso de\r\n                  dinero.\r\n                </li>\r\n                <li>\r\n                  <b>Fecha:</b> por defecto, el formulario presentará la fecha\r\n                  del día de hoy como opción. No obstante, puede cambiarse si\r\n                  desea registrar una operación anterior o futura.\r\n                </li>\r\n              </ul>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                Una vez completados los campos, utilice el botón de \"Realizar\r\n                operación\" para registrar el ingreso o egreso de dinero. El\r\n                mismo ya podrá verse reflejado inmediatamente en el total de su\r\n                balance y en el historial de operaciones.\r\n              </Typography>\r\n              <Typography\r\n                variant=\"h3\"\r\n                color=\"initial\"\r\n                style={{ marginLeft: '12px' }}\r\n              >\r\n                Historial de operaciones\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                En este apartado se presenta una tabla con los datos de todas\r\n                las operaciones registradas en su cuenta. Los mismos pueden ser\r\n                editados mediante el botón de lápiz que se visualiza al inicio\r\n                de cada fila de la tabla.\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                Al interactuar con el botón de edición, podrá cambiar los datos\r\n                \"Concepto\" y \"Monto\" de la operación seleccionada. El tipo de\r\n                operación y la fecha no pueden modificarse. Si desea modificar\r\n                esos campos, deberá eliminar la operación y registrar una\r\n                operación nueva.\r\n              </Typography>\r\n              <Typography variant=\"body1\" color=\"initial\">\r\n                Al entrar en el modo de edición, se habilitarán dos botones al\r\n                comienzo de la fila que sustituyen al lápiz:\r\n              </Typography>\r\n              <ul className={classes.helpList}>\r\n                <li>\r\n                  <b>Confirmar:</b> guarda los cambios que fueron editados en\r\n                  los campos.\r\n                </li>\r\n                <li>\r\n                  <b>Eliminar:</b> elimina la operación definitivamente. Esta\r\n                  acción no puede revertirse.\r\n                </li>\r\n              </ul>\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Help\r\n","C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\OperationHistory.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\pages\\Home.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\Drawer.js",[],"C:\\Proyectos varios\\pb\\personal-budget-front\\src\\components\\DrawerList.js",[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","replacedBy":"121"},{"ruleId":"122","severity":1,"message":"123","line":27,"column":7,"nodeType":"124","messageId":"125","endLine":27,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":35,"column":7,"nodeType":"124","messageId":"125","endLine":35,"endColumn":19},{"ruleId":"122","severity":1,"message":"123","line":43,"column":7,"nodeType":"124","messageId":"125","endLine":43,"endColumn":19},{"ruleId":"126","severity":1,"message":"127","line":86,"column":13,"nodeType":"128","endLine":90,"endColumn":4},{"ruleId":"126","severity":1,"message":"129","line":90,"column":6,"nodeType":"130","endLine":90,"endColumn":14,"suggestions":"131"},{"ruleId":"126","severity":1,"message":"132","line":64,"column":6,"nodeType":"130","endLine":64,"endColumn":8,"suggestions":"133"},{"ruleId":"126","severity":1,"message":"132","line":35,"column":6,"nodeType":"130","endLine":35,"endColumn":8,"suggestions":"134"},{"ruleId":"135","severity":1,"message":"136","line":2,"column":18,"nodeType":"137","messageId":"138","endLine":2,"endColumn":28},{"ruleId":"135","severity":1,"message":"139","line":1,"column":27,"nodeType":"137","messageId":"138","endLine":1,"endColumn":36},{"ruleId":"140","severity":1,"message":"141","line":1,"column":1,"nodeType":"142","endLine":4,"endColumn":2},{"ruleId":"135","severity":1,"message":"143","line":2,"column":8,"nodeType":"137","messageId":"138","endLine":2,"endColumn":14},{"ruleId":"126","severity":1,"message":"144","line":29,"column":6,"nodeType":"130","endLine":29,"endColumn":26,"suggestions":"145"},{"ruleId":"135","severity":1,"message":"146","line":31,"column":9,"nodeType":"137","messageId":"138","endLine":31,"endColumn":20},{"ruleId":"135","severity":1,"message":"147","line":10,"column":8,"nodeType":"137","messageId":"138","endLine":10,"endColumn":16},{"ruleId":"135","severity":1,"message":"148","line":7,"column":16,"nodeType":"137","messageId":"138","endLine":7,"endColumn":24},{"ruleId":"149","severity":1,"message":"150","line":114,"column":30,"nodeType":"151","messageId":"152","endLine":114,"endColumn":31,"suggestions":"153"},{"ruleId":"135","severity":1,"message":"154","line":5,"column":8,"nodeType":"137","messageId":"138","endLine":5,"endColumn":26},{"ruleId":"135","severity":1,"message":"155","line":6,"column":8,"nodeType":"137","messageId":"138","endLine":6,"endColumn":26},"no-native-reassign",["156"],"no-negated-in-lhs",["157"],"no-dupe-keys","Duplicate key 'marginBottom'.","ObjectExpression","unexpected","react-hooks/exhaustive-deps","Effect callbacks are synchronous to prevent race conditions. Put the async function inside:\n\nuseEffect(() => {\n  async function fetchData() {\n    // You can await here\n    const response = await MyAPI.getData(someId);\n    // ...\n  }\n  fetchData();\n}, [someId]); // Or [] if effect doesn't need props or state\n\nLearn more about data fetching with Hooks: https://reactjs.org/link/hooks-data-fetching","ArrowFunctionExpression","React Hook useEffect has missing dependencies: 'getOperations' and 'renderTable'. Either include them or remove the dependency array.","ArrayExpression",["158"],"React Hook useEffect has a missing dependency: 'jwt'. Either include it or remove the dependency array.",["159"],["160"],"no-unused-vars","'makeStyles' is defined but never used.","Identifier","unusedVar","'useEffect' is defined but never used.","import/no-anonymous-default-export","Assign object to a variable before exporting as module default","ExportDefaultDeclaration","'Button' is defined but never used.","React Hook useEffect has a missing dependency: 'props'. Either include it or remove the dependency array. However, 'props' will change when *any* prop changes, so the preferred fix is to destructure the 'props' object outside of the useEffect call and refer to those specific props inside useEffect.",["161"],"'handleClick' is assigned a value but never used.","'MenuIcon' is defined but never used.","'Redirect' is defined but never used.","no-useless-escape","Unnecessary escape character: \\..","Literal","unnecessaryEscape",["162","163"],"'LabelImportantIcon' is defined but never used.","'AccountBalanceIcon' is defined but never used.","no-global-assign","no-unsafe-negation",{"desc":"164","fix":"165"},{"desc":"166","fix":"167"},{"desc":"166","fix":"168"},{"desc":"169","fix":"170"},{"messageId":"171","fix":"172","desc":"173"},{"messageId":"174","fix":"175","desc":"176"},"Update the dependencies array to be: [getOperations, reload, renderTable]",{"range":"177","text":"178"},"Update the dependencies array to be: [jwt]",{"range":"179","text":"180"},{"range":"181","text":"180"},"Update the dependencies array to be: [props, props.openSnackbar]",{"range":"182","text":"183"},"removeEscape",{"range":"184","text":"185"},"Remove the `\\`. This maintains the current functionality.","escapeBackslash",{"range":"186","text":"187"},"Replace the `\\` with `\\\\` to include the actual backslash character.",[2303,2311],"[getOperations, reload, renderTable]",[1698,1700],"[jwt]",[882,884],[757,777],"[props, props.openSnackbar]",[3537,3538],"",[3537,3537],"\\"]
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\pb\\\\personal-budget-front\\\\src\\\\components\\\\EditableTable.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React from 'react';\nimport { Redirect } from 'react-router-dom';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Input from '@material-ui/core/Input';\nimport Paper from '@material-ui/core/Paper';\nimport IconButton from '@material-ui/core/IconButton'; // Icons\n\nimport EditIcon from '@material-ui/icons/EditOutlined';\nimport DoneIcon from '@material-ui/icons/DoneAllTwoTone';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport apirest from '../services/apirest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    marginTop: theme.spacing(3),\n    overflowX: 'auto'\n  },\n  table: {\n    minWidth: 650\n  },\n  selectTableCell: {\n    width: 60\n  },\n  tableCell: {\n    width: 130,\n    height: 40\n  },\n  input: {\n    width: 130,\n    height: 40\n  }\n}));\n\nconst createData = (id, concept, mount, type, date) => ({\n  id,\n  concept,\n  mount,\n  type,\n  date,\n  isEditMode: false\n});\n\nconst CustomTableCell = ({\n  row,\n  name,\n  onChange\n}) => {\n  _s();\n\n  const classes = useStyles();\n  const {\n    isEditMode\n  } = row;\n  return /*#__PURE__*/_jsxDEV(TableCell, {\n    align: \"left\",\n    className: classes.tableCell,\n    children: isEditMode && name != 'type' ? /*#__PURE__*/_jsxDEV(Input, {\n      value: row[name],\n      name: name,\n      onChange: e => onChange(e, row),\n      className: classes.input\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : row[name]\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CustomTableCell, \"8g5FPXexvSEOsxdmU7HicukHGqY=\", false, function () {\n  return [useStyles];\n});\n\n_c = CustomTableCell;\n\nfunction EditableTable(props) {\n  _s2();\n\n  const classes = useStyles();\n  console.log('Se cargo la tabla: ', props.ops);\n  const [rows, setRows] = useState([]);\n  const [data, setData] = useState([]);\n  const [previous, setPrevious] = React.useState(rows); // const jwt = localStorage.getItem('jwt')\n\n  const user_id = localStorage.getItem('user_id');\n\n  const fillTable = () => {\n    let newRows = [];\n    rows.forEach(element => {\n      newRows.push(createData(element._id, element.concept, element.mount, element.type, element.date));\n    });\n    console.log('Filas de la tabla:', newRows);\n    setRows(newRows);\n  };\n\n  useEffect(async () => {\n    console.log('Se recivio esto: ', props);\n\n    if (props.loading == false) {\n      console.log('Ya cargamos');\n      console.log('Datos recibidos', props.ops);\n      setRows(props.ops);\n      fillTable();\n    } else {\n      console.log('Segunios cargando');\n    }\n  }, []);\n\n  const onToggleEditMode = id => {\n    setRows(state => {\n      return rows.map(row => {\n        if (row.id === id) {\n          return { ...row,\n            isEditMode: !row.isEditMode\n          };\n        }\n\n        return row;\n      });\n    });\n  };\n\n  const onChange = (e, row) => {\n    if (!previous[row.id]) {\n      setPrevious(state => ({ ...state,\n        [row.id]: row\n      }));\n    }\n\n    const value = e.target.value;\n    const name = e.target.name;\n    const {\n      id\n    } = row;\n    const newRows = rows.map(row => {\n      if (row.id === id) {\n        return { ...row,\n          [name]: value\n        };\n      }\n\n      return row;\n    });\n    setRows(newRows);\n  };\n\n  const handleDelete = operation_id => {\n    console.log('enviando datos:', user_id, operation_id);\n    axios.delete(apirest.apiUrl + '/operations/' + user_id + '/' + operation_id).then(res => {\n      console.log(res);\n\n      if (res.data.error) {\n        console.log('Error in server'); // setErrorMsg(res.data.message)\n      } else {\n        console.log('Aca hay que renderizar de nuevo el componente.');\n      }\n    });\n  };\n\n  const handleSave = operation_id => {\n    console.log('enviando datos:', user_id, operation_id);\n    let updateData;\n    rows.map(row => {\n      if (row.id === operation_id) {\n        updateData = row;\n      }\n    });\n    console.log(updateData);\n    axios.put(apirest.apiUrl + '/operations/' + user_id + '/' + operation_id, updateData).then(res => {\n      console.log(res);\n\n      if (res.data.error) {\n        console.log('Error in server');\n      } else {// setRedirect(true)\n      }\n    });\n    onToggleEditMode(operation_id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      \"aria-label\": \"caption table\",\n      children: [/*#__PURE__*/_jsxDEV(\"caption\", {\n        children: rows.length > 0 ? 'Utilice el botón de lápiz para editar o eliminar un registro.' : 'No hay registros para mostrar.'\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 176,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 183,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Concepto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Importe\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"left\",\n            children: \"Fecha y hora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 181,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            className: classes.selectTableCell,\n            children: row.isEditMode ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"done\" // onClick={() => onToggleEditMode(row.id)}\n                ,\n                onClick: () => handleSave(row.id),\n                children: /*#__PURE__*/_jsxDEV(DoneIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 196,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(IconButton, {\n                \"aria-label\": \"delete\",\n                onClick: () => handleDelete(row.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(IconButton, {\n              \"aria-label\": \"edit\",\n              onClick: () => onToggleEditMode(row.id),\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: 'concept',\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: 'mount',\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 220,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: 'type',\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(CustomTableCell, {\n            row,\n            name: 'date',\n            onChange\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 192,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 190,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 175,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 174,\n    columnNumber: 5\n  }, this);\n}\n\n_s2(EditableTable, \"ZUypWI05m0yE6HUnPEbp/G1d1f0=\", false, function () {\n  return [useStyles];\n});\n\n_c2 = EditableTable;\nexport default EditableTable;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"CustomTableCell\");\n$RefreshReg$(_c2, \"EditableTable\");","map":{"version":3,"sources":["C:/Proyectos varios/pb/personal-budget-front/src/components/EditableTable.js"],"names":["React","Redirect","makeStyles","Table","TableBody","TableCell","TableHead","TableRow","Input","Paper","IconButton","EditIcon","DoneIcon","DeleteIcon","useState","useEffect","axios","apirest","useStyles","theme","root","width","marginTop","spacing","overflowX","table","minWidth","selectTableCell","tableCell","height","input","createData","id","concept","mount","type","date","isEditMode","CustomTableCell","row","name","onChange","classes","e","EditableTable","props","console","log","ops","rows","setRows","data","setData","previous","setPrevious","user_id","localStorage","getItem","fillTable","newRows","forEach","element","push","_id","loading","onToggleEditMode","state","map","value","target","handleDelete","operation_id","delete","apiUrl","then","res","error","handleSave","updateData","put","length"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { Redirect } from 'react-router-dom'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Input from '@material-ui/core/Input'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport IconButton from '@material-ui/core/IconButton'\r\n// Icons\r\nimport EditIcon from '@material-ui/icons/EditOutlined'\r\nimport DoneIcon from '@material-ui/icons/DoneAllTwoTone'\r\nimport DeleteIcon from '@material-ui/icons/Delete'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport apirest from '../services/apirest'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n    marginTop: theme.spacing(3),\r\n    overflowX: 'auto',\r\n  },\r\n  table: {\r\n    minWidth: 650,\r\n  },\r\n  selectTableCell: {\r\n    width: 60,\r\n  },\r\n  tableCell: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n  input: {\r\n    width: 130,\r\n    height: 40,\r\n  },\r\n}))\r\n\r\nconst createData = (id, concept, mount, type, date) => ({\r\n  id,\r\n  concept,\r\n  mount,\r\n  type,\r\n  date,\r\n  isEditMode: false,\r\n})\r\n\r\nconst CustomTableCell = ({ row, name, onChange }) => {\r\n  const classes = useStyles()\r\n  const { isEditMode } = row\r\n  return (\r\n    <TableCell align=\"left\" className={classes.tableCell}>\r\n      {isEditMode && name != 'type' ? (\r\n        <Input\r\n          value={row[name]}\r\n          name={name}\r\n          onChange={(e) => onChange(e, row)}\r\n          className={classes.input}\r\n        />\r\n      ) : (\r\n        row[name]\r\n      )}\r\n    </TableCell>\r\n  )\r\n}\r\nfunction EditableTable(props) {\r\n  const classes = useStyles()\r\n  console.log('Se cargo la tabla: ', props.ops)\r\n  const [rows, setRows] = useState([])\r\n  const [data, setData] = useState([])\r\n  const [previous, setPrevious] = React.useState(rows)\r\n  // const jwt = localStorage.getItem('jwt')\r\n  const user_id = localStorage.getItem('user_id')\r\n  const fillTable = () => {\r\n    let newRows = []\r\n    rows.forEach((element) => {\r\n      newRows.push(\r\n        createData(\r\n          element._id,\r\n          element.concept,\r\n          element.mount,\r\n          element.type,\r\n          element.date,\r\n        ),\r\n      )\r\n    })\r\n    console.log('Filas de la tabla:', newRows)\r\n    setRows(newRows)\r\n  }\r\n  useEffect(async () => {\r\n    console.log('Se recivio esto: ', props)\r\n    if (props.loading == false) {\r\n      console.log('Ya cargamos')\r\n      console.log('Datos recibidos', props.ops)\r\n\r\n      setRows(props.ops)\r\n      fillTable()\r\n    } else {\r\n      console.log('Segunios cargando')\r\n    }\r\n  }, [])\r\n\r\n  const onToggleEditMode = (id) => {\r\n    setRows((state) => {\r\n      return rows.map((row) => {\r\n        if (row.id === id) {\r\n          return { ...row, isEditMode: !row.isEditMode }\r\n        }\r\n        return row\r\n      })\r\n    })\r\n  }\r\n\r\n  const onChange = (e, row) => {\r\n    if (!previous[row.id]) {\r\n      setPrevious((state) => ({ ...state, [row.id]: row }))\r\n    }\r\n    const value = e.target.value\r\n    const name = e.target.name\r\n    const { id } = row\r\n    const newRows = rows.map((row) => {\r\n      if (row.id === id) {\r\n        return { ...row, [name]: value }\r\n      }\r\n      return row\r\n    })\r\n    setRows(newRows)\r\n  }\r\n\r\n  const handleDelete = (operation_id) => {\r\n    console.log('enviando datos:', user_id, operation_id)\r\n    axios\r\n      .delete(apirest.apiUrl + '/operations/' + user_id + '/' + operation_id)\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.data.error) {\r\n          console.log('Error in server')\r\n          // setErrorMsg(res.data.message)\r\n        } else {\r\n          console.log('Aca hay que renderizar de nuevo el componente.')\r\n        }\r\n      })\r\n  }\r\n\r\n  const handleSave = (operation_id) => {\r\n    console.log('enviando datos:', user_id, operation_id)\r\n    let updateData\r\n    rows.map((row) => {\r\n      if (row.id === operation_id) {\r\n        updateData = row\r\n      }\r\n    })\r\n    console.log(updateData)\r\n    axios\r\n      .put(\r\n        apirest.apiUrl + '/operations/' + user_id + '/' + operation_id,\r\n        updateData,\r\n      )\r\n      .then((res) => {\r\n        console.log(res)\r\n        if (res.data.error) {\r\n          console.log('Error in server')\r\n        } else {\r\n          // setRedirect(true)\r\n        }\r\n      })\r\n    onToggleEditMode(operation_id)\r\n  }\r\n\r\n  return (\r\n    <Paper className={classes.root}>\r\n      <Table className={classes.table} aria-label=\"caption table\">\r\n        <caption>\r\n          {rows.length > 0\r\n            ? 'Utilice el botón de lápiz para editar o eliminar un registro.'\r\n            : 'No hay registros para mostrar.'}\r\n        </caption>\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell align=\"left\" />\r\n            <TableCell align=\"left\">Concepto</TableCell>\r\n            <TableCell align=\"left\">Importe</TableCell>\r\n            <TableCell align=\"left\">Tipo</TableCell>\r\n            <TableCell align=\"left\">Fecha y hora</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell className={classes.selectTableCell}>\r\n                {row.isEditMode ? (\r\n                  <>\r\n                    <IconButton\r\n                      aria-label=\"done\"\r\n                      // onClick={() => onToggleEditMode(row.id)}\r\n                      onClick={() => handleSave(row.id)}\r\n                    >\r\n                      <DoneIcon />\r\n                    </IconButton>\r\n                    <IconButton\r\n                      aria-label=\"delete\"\r\n                      onClick={() => handleDelete(row.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </IconButton>\r\n                  </>\r\n                ) : (\r\n                  <IconButton\r\n                    aria-label=\"edit\"\r\n                    onClick={() => onToggleEditMode(row.id)}\r\n                  >\r\n                    <EditIcon />\r\n                  </IconButton>\r\n                )}\r\n              </TableCell>\r\n              <CustomTableCell {...{ row, name: 'concept', onChange }} />\r\n              <CustomTableCell {...{ row, name: 'mount', onChange }} />\r\n              <CustomTableCell {...{ row, name: 'type', onChange }} />\r\n              <CustomTableCell {...{ row, name: 'date', onChange }} />\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </Paper>\r\n  )\r\n}\r\n\r\nexport default EditableTable\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\pb\\\\personal-budget-front\\\\src\\\\components\\\\OperationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport InputIcon from '@material-ui/icons/Input';\nimport InputLabel from '@material-ui/core/InputLabel';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport axios from 'axios';\nimport apirest from '../services/apirest';\nimport CustomizedSnackbars from './CustomizedSnackbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {},\n  formControl: {\n    margin: theme.spacing(1),\n    minWidth: 120\n  },\n  selectEmpty: {\n    marginTop: theme.spacing(2)\n  }\n}));\n\nfunction OperationForm(props) {\n  _s();\n\n  const classes = useStyles(); // const jwt = localStorage.getItem('jwt')\n\n  const user_id = localStorage.getItem('user_id');\n  const dateNow = new Date(); // Creating a new date object with the current date and time\n\n  const year = dateNow.getFullYear(); // Getting current year from the created Date object\n\n  const monthWithOffset = dateNow.getUTCMonth() + 1; // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\n\n  const month = // Setting current Month number from current Date object\n  monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\n  ? `0${monthWithOffset}` : monthWithOffset;\n  const date = dateNow.getUTCDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\n  ? `0${dateNow.getUTCDate()}` : dateNow.getUTCDate();\n  const materialDateInput = `${year}-${month}-${date}`;\n\n  const handleChange = event => {\n    const name = event.target.name;\n    setState({ ...state,\n      [name]: event.target.value\n    });\n    console.log(event.target.value);\n    console.log(state);\n  };\n\n  const [state, setState] = React.useState({\n    operationType: 1,\n    mount: 0,\n    concept: '',\n    date: dateNow.toISOString().split('T')[0]\n  });\n\n  const handleSubmit = async e => {\n    e.preventDefault();\n    const operation = {\n      user_id: user_id,\n      concept: state.concept,\n      mount: state.mount,\n      type: state.operationType,\n      date: state.date\n    };\n    console.log('enviando: ', operation);\n    await axios.post(apirest.apiUrl + '/operations', operation);\n    props.reFetch();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: [\"CustomizedSnackbars\", /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: false,\n          helperText: \"Ingrese un n\\xFAmero decimal. Centavos opcionales.\",\n          id: \"mount\",\n          label: \"Monto $\",\n          name: \"mount\",\n          fullWidth: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(FormControl, {\n          className: classes.formControl,\n          fullWidth: true,\n          children: [/*#__PURE__*/_jsxDEV(InputLabel, {\n            htmlFor: \"operationType\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Select, {\n            native: true,\n            value: state.operationType,\n            onChange: handleChange,\n            inputProps: {\n              name: 'operationType',\n              id: 'operationType'\n            },\n            children: [/*#__PURE__*/_jsxDEV(\"option\", {\n              value: 1,\n              children: \"Ingreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n              value: 2,\n              children: \"Egreso\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          error: false,\n          id: \"concept\",\n          label: \"Concepto\",\n          name: \"concept\",\n          fullWidth: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        md: 6,\n        children: /*#__PURE__*/_jsxDEV(TextField, {\n          id: \"date\",\n          label: \"Fecha de operacion\",\n          type: \"date\",\n          name: \"date\",\n          defaultValue: materialDateInput,\n          className: classes.textField,\n          InputLabelProps: {\n            shrink: true\n          },\n          fullWidth: true,\n          onChange: handleChange\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          startIcon: /*#__PURE__*/_jsxDEV(InputIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 24\n          }, this),\n          fullWidth: true,\n          children: \"Realizar operaci\\xF3n\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OperationForm, \"oW7h9ybV6Lq+cf33eW3emqx2BzQ=\", false, function () {\n  return [useStyles];\n});\n\n_c = OperationForm;\nexport default OperationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationForm\");","map":{"version":3,"sources":["C:/Proyectos varios/pb/personal-budget-front/src/components/OperationForm.js"],"names":["React","makeStyles","TextField","Grid","Button","InputIcon","InputLabel","FormControl","Select","axios","apirest","CustomizedSnackbars","useStyles","theme","root","formControl","margin","spacing","minWidth","selectEmpty","marginTop","OperationForm","props","classes","user_id","localStorage","getItem","dateNow","Date","year","getFullYear","monthWithOffset","getUTCMonth","month","toString","length","date","getUTCDate","materialDateInput","handleChange","event","name","target","setState","state","value","console","log","useState","operationType","mount","concept","toISOString","split","handleSubmit","e","preventDefault","operation","type","post","apiUrl","reFetch","id","textField","shrink"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\nimport InputIcon from '@material-ui/icons/Input'\r\nimport InputLabel from '@material-ui/core/InputLabel'\r\nimport FormControl from '@material-ui/core/FormControl'\r\nimport Select from '@material-ui/core/Select'\r\nimport axios from 'axios'\r\nimport apirest from '../services/apirest'\r\nimport CustomizedSnackbars from './CustomizedSnackbar'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {},\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}))\r\n\r\nfunction OperationForm(props) {\r\n  const classes = useStyles()\r\n  // const jwt = localStorage.getItem('jwt')\r\n\r\n  const user_id = localStorage.getItem('user_id')\r\n\r\n  const dateNow = new Date() // Creating a new date object with the current date and time\r\n  const year = dateNow.getFullYear() // Getting current year from the created Date object\r\n  const monthWithOffset = dateNow.getUTCMonth() + 1 // January is 0 by default in JS. Offsetting +1 to fix date for calendar.\r\n  const month = // Setting current Month number from current Date object\r\n    monthWithOffset.toString().length < 2 // Checking if month is < 10 and pre-prending 0 to adjust for date input.\r\n      ? `0${monthWithOffset}`\r\n      : monthWithOffset\r\n  const date =\r\n    dateNow.getUTCDate().toString().length < 2 // Checking if date is < 10 and pre-prending 0 if not to adjust for date input.\r\n      ? `0${dateNow.getUTCDate()}`\r\n      : dateNow.getUTCDate()\r\n\r\n  const materialDateInput = `${year}-${month}-${date}`\r\n  const handleChange = (event) => {\r\n    const name = event.target.name\r\n    setState({\r\n      ...state,\r\n      [name]: event.target.value,\r\n    })\r\n    console.log(event.target.value)\r\n    console.log(state)\r\n  }\r\n\r\n  const [state, setState] = React.useState({\r\n    operationType: 1,\r\n    mount: 0,\r\n    concept: '',\r\n    date: dateNow.toISOString().split('T')[0],\r\n  })\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault()\r\n    const operation = {\r\n      user_id: user_id,\r\n      concept: state.concept,\r\n      mount: state.mount,\r\n      type: state.operationType,\r\n      date: state.date,\r\n    }\r\n    console.log('enviando: ', operation)\r\n    await axios.post(apirest.apiUrl + '/operations', operation)\r\n    props.reFetch()\r\n  }\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      CustomizedSnackbars\r\n      <Grid container spacing={4}>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            error={false}\r\n            helperText=\"Ingrese un número decimal. Centavos opcionales.\"\r\n            id=\"mount\"\r\n            label=\"Monto $\"\r\n            name=\"mount\"\r\n            fullWidth={true}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <FormControl className={classes.formControl} fullWidth={true}>\r\n            <InputLabel htmlFor=\"operationType\">Tipo</InputLabel>\r\n            <Select\r\n              native\r\n              value={state.operationType}\r\n              onChange={handleChange}\r\n              inputProps={{\r\n                name: 'operationType',\r\n                id: 'operationType',\r\n              }}\r\n            >\r\n              <option value={1}>Ingreso</option>\r\n              <option value={2}>Egreso</option>\r\n            </Select>\r\n          </FormControl>\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            error={false}\r\n            id=\"concept\"\r\n            label=\"Concepto\"\r\n            name=\"concept\"\r\n            fullWidth={true}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} md={6}>\r\n          <TextField\r\n            id=\"date\"\r\n            label=\"Fecha de operacion\"\r\n            type=\"date\"\r\n            name=\"date\"\r\n            defaultValue={materialDateInput}\r\n            className={classes.textField}\r\n            InputLabelProps={{\r\n              shrink: true,\r\n            }}\r\n            fullWidth={true}\r\n            onChange={handleChange}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          <Button\r\n            type=\"submit\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n            startIcon={<InputIcon />}\r\n            fullWidth={true}\r\n          >\r\n            Realizar operación\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n\r\nexport default OperationForm\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\personal-budget\\\\src\\\\components\\\\OperationForm.js\";\nimport React from 'react';\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom';\nimport FormVanilla from './FormVanilla';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst nameValidation = (fieldName, fieldValue) => {\n  if (fieldValue.trim() === '') {\n    return `${fieldName} is required`;\n  }\n\n  if (/[^a-zA-Z -]/.test(fieldValue)) {\n    return 'Invalid characters';\n  }\n\n  if (fieldValue.trim().length < 3) {\n    return `${fieldName} needs to be at least three characters`;\n  }\n\n  return null;\n};\n\nconst emailValidation = email => {\n  if (/^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(email)) {\n    return null;\n  }\n\n  if (email.trim() === '') {\n    return 'Email is required';\n  }\n\n  return 'Please enter a valid email';\n};\n\nconst ageValidation = age => {\n  if (!age) {\n    return 'Age is required';\n  }\n\n  if (age < 18) {\n    return 'Age must be at least 18';\n  }\n\n  if (age > 99) {\n    return 'Age must be under 99';\n  }\n\n  return null;\n};\n\nconst validate = {\n  firstName: name => nameValidation('First Name', name),\n  lastName: name => nameValidation('Last Name', name),\n  email: emailValidation,\n  age: ageValidation\n};\nconst initialValues = {\n  age: 10,\n  email: 'no@email',\n  firstName: 'Mary',\n  lastName: 'Jane'\n};\n\nfunction OperationForm() {\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      marginLeft: 'auto',\n      marginRight: 'auto',\n      maxWidth: '960px',\n      padding: '10px'\n    },\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Forms\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"ul\", {\n          children: [/*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/form-vanilla\",\n              children: \"Form with manual validation\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"li\", {\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"/form-formik\",\n              children: \"Form validation using Formik\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/form-vanilla\",\n        render: () => /*#__PURE__*/_jsxDEV(FormVanilla, {\n          validate: validate,\n          initialValues: initialValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 87,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Route, {\n        path: \"/form-formik\",\n        render: () => /*#__PURE__*/_jsxDEV(FormFormik, {\n          validate: validate,\n          initialValues: initialValues\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_c = OperationForm;\nexport default OperationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationForm\");","map":{"version":3,"sources":["C:/Proyectos varios/personal-budget/src/components/OperationForm.js"],"names":["React","BrowserRouter","Router","Route","Link","FormVanilla","nameValidation","fieldName","fieldValue","trim","test","length","emailValidation","email","ageValidation","age","validate","firstName","name","lastName","initialValues","OperationForm","marginLeft","marginRight","maxWidth","padding"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { BrowserRouter as Router, Route, Link } from 'react-router-dom'\r\n\r\nimport FormVanilla from './FormVanilla'\r\n\r\nimport 'bootstrap/dist/css/bootstrap.min.css'\r\n\r\nconst nameValidation = (fieldName, fieldValue) => {\r\n  if (fieldValue.trim() === '') {\r\n    return `${fieldName} is required`\r\n  }\r\n  if (/[^a-zA-Z -]/.test(fieldValue)) {\r\n    return 'Invalid characters'\r\n  }\r\n  if (fieldValue.trim().length < 3) {\r\n    return `${fieldName} needs to be at least three characters`\r\n  }\r\n  return null\r\n}\r\n\r\nconst emailValidation = (email) => {\r\n  if (\r\n    /^[a-zA-Z0-9.!#$%&’*+/=?^_`{|}~-]+@[a-zA-Z0-9-]+(?:\\.[a-zA-Z0-9-]+)*$/.test(\r\n      email,\r\n    )\r\n  ) {\r\n    return null\r\n  }\r\n  if (email.trim() === '') {\r\n    return 'Email is required'\r\n  }\r\n  return 'Please enter a valid email'\r\n}\r\n\r\nconst ageValidation = (age) => {\r\n  if (!age) {\r\n    return 'Age is required'\r\n  }\r\n  if (age < 18) {\r\n    return 'Age must be at least 18'\r\n  }\r\n  if (age > 99) {\r\n    return 'Age must be under 99'\r\n  }\r\n  return null\r\n}\r\n\r\nconst validate = {\r\n  firstName: (name) => nameValidation('First Name', name),\r\n  lastName: (name) => nameValidation('Last Name', name),\r\n  email: emailValidation,\r\n  age: ageValidation,\r\n}\r\n\r\nconst initialValues = {\r\n  age: 10,\r\n  email: 'no@email',\r\n  firstName: 'Mary',\r\n  lastName: 'Jane',\r\n}\r\n\r\nfunction OperationForm() {\r\n  return (\r\n    <div\r\n      style={{\r\n        marginLeft: 'auto',\r\n        marginRight: 'auto',\r\n        maxWidth: '960px',\r\n        padding: '10px',\r\n      }}\r\n    >\r\n      <Router>\r\n        <div>\r\n          <h1>Forms</h1>\r\n          <ul>\r\n            <li>\r\n              <Link to=\"/form-vanilla\">Form with manual validation</Link>\r\n            </li>\r\n            <li>\r\n              <Link to=\"/form-formik\">Form validation using Formik</Link>\r\n            </li>\r\n          </ul>\r\n        </div>\r\n        <Route\r\n          path=\"/form-vanilla\"\r\n          render={() => (\r\n            <FormVanilla validate={validate} initialValues={initialValues} />\r\n          )}\r\n        />\r\n        <Route\r\n          path=\"/form-formik\"\r\n          render={() => (\r\n            <FormFormik validate={validate} initialValues={initialValues} />\r\n          )}\r\n        />\r\n      </Router>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OperationForm\r\n"]},"metadata":{},"sourceType":"module"}
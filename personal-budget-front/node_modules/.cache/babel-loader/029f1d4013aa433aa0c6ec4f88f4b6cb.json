{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\pb\\\\personal-budget-front\\\\src\\\\components\\\\LastOperations.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport Paper from '@material-ui/core/Paper';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport apirest from '../services/apirest';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles({\n  table: {\n    minWidth: 100\n  }\n});\n\nfunction createData(id, concept, mount, type, date) {\n  const dateFormatted = new Date(date).toISOString();\n  console.log('Fecha: ', dateFormatted);\n  return {\n    id,\n    concept,\n    mount,\n    type,\n    date\n  };\n}\n\nexport default function LastOperations() {\n  _s();\n\n  const [rows, setRows] = useState([]); // const jwt = localStorage.getItem('jwt')\n\n  useEffect(() => {\n    const user_id = localStorage.getItem('user_id');\n\n    const getData = async function () {\n      let newRows = [];\n      const res = await axios.get(apirest.apiUrl + '/operations/' + user_id);\n      res.data.forEach(element => {\n        newRows.push(createData(element._id, element.concept, element.mount, element.type, element.date));\n      });\n      setRows(newRows);\n      console.log(newRows);\n    };\n\n    getData();\n  }, []);\n  const classes = useStyles();\n  return /*#__PURE__*/_jsxDEV(TableContainer, {\n    component: Paper,\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      className: classes.table,\n      size: \"small\",\n      \"aria-label\": \"a dense table\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        children: /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: \"Concepto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Monto\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Tipo\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: \"Fecha y hora\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        children: rows.map(row => /*#__PURE__*/_jsxDEV(TableRow, {\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            component: \"th\",\n            scope: \"row\",\n            children: row.concept\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.mount\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.type === 1 ? 'Ingreso' : 'Egreso'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            align: \"right\",\n            children: row.date\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this)]\n        }, row.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LastOperations, \"bU8ynTurOcxcdq9QcOgzg+7bLMo=\", false, function () {\n  return [useStyles];\n});\n\n_c = LastOperations;\n\nvar _c;\n\n$RefreshReg$(_c, \"LastOperations\");","map":{"version":3,"sources":["C:/Proyectos varios/pb/personal-budget-front/src/components/LastOperations.js"],"names":["React","makeStyles","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","Paper","useState","useEffect","axios","apirest","useStyles","table","minWidth","createData","id","concept","mount","type","date","dateFormatted","Date","toISOString","console","log","LastOperations","rows","setRows","user_id","localStorage","getItem","getData","newRows","res","get","apiUrl","data","forEach","element","push","_id","classes","map","row"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport Table from '@material-ui/core/Table'\r\nimport TableBody from '@material-ui/core/TableBody'\r\nimport TableCell from '@material-ui/core/TableCell'\r\nimport TableContainer from '@material-ui/core/TableContainer'\r\nimport TableHead from '@material-ui/core/TableHead'\r\nimport TableRow from '@material-ui/core/TableRow'\r\nimport Paper from '@material-ui/core/Paper'\r\nimport { useState, useEffect } from 'react'\r\nimport axios from 'axios'\r\nimport apirest from '../services/apirest'\r\n\r\nconst useStyles = makeStyles({\r\n  table: {\r\n    minWidth: 100,\r\n  },\r\n})\r\n\r\nfunction createData(id, concept, mount, type, date) {\r\n  const dateFormatted = new Date(date).toISOString()\r\n  console.log('Fecha: ', dateFormatted)\r\n  return { id, concept, mount, type, date }\r\n}\r\n\r\nexport default function LastOperations() {\r\n  const [rows, setRows] = useState([])\r\n  // const jwt = localStorage.getItem('jwt')\r\n  useEffect(() => {\r\n    const user_id = localStorage.getItem('user_id')\r\n    const getData = async function () {\r\n      let newRows = []\r\n      const res = await axios.get(apirest.apiUrl + '/operations/' + user_id)\r\n      res.data.forEach((element) => {\r\n        newRows.push(\r\n          createData(\r\n            element._id,\r\n            element.concept,\r\n            element.mount,\r\n            element.type,\r\n            element.date,\r\n          ),\r\n        )\r\n      })\r\n      setRows(newRows)\r\n      console.log(newRows)\r\n    }\r\n    getData()\r\n  }, [])\r\n\r\n  const classes = useStyles()\r\n\r\n  return (\r\n    <TableContainer component={Paper}>\r\n      <Table className={classes.table} size=\"small\" aria-label=\"a dense table\">\r\n        <TableHead>\r\n          <TableRow>\r\n            <TableCell>Concepto</TableCell>\r\n            <TableCell align=\"right\">Monto</TableCell>\r\n            <TableCell align=\"right\">Tipo</TableCell>\r\n            <TableCell align=\"right\">Fecha y hora</TableCell>\r\n          </TableRow>\r\n        </TableHead>\r\n        <TableBody>\r\n          {rows.map((row) => (\r\n            <TableRow key={row.id}>\r\n              <TableCell component=\"th\" scope=\"row\">\r\n                {row.concept}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.mount}</TableCell>\r\n              <TableCell align=\"right\">\r\n                {row.type === 1 ? 'Ingreso' : 'Egreso'}\r\n              </TableCell>\r\n              <TableCell align=\"right\">{row.date}</TableCell>\r\n            </TableRow>\r\n          ))}\r\n        </TableBody>\r\n      </Table>\r\n    </TableContainer>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\personal-budget\\\\src\\\\components\\\\OperationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport Grid from '@material-ui/core/Grid';\nimport Button from '@material-ui/core/Button';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    margin: theme.spacing(5)\n  }\n}));\nexport default function OperationForm() {\n  _s();\n\n  const classes = useStyles();\n  const [form, setForm] = useState({\n    name: 'aaa',\n    email: 'bbb',\n    remember: 'ccc'\n  });\n  const isValidData = {\n    name: 'aaa',\n    email: 'bbb',\n    remember: 'ccc'\n  };\n\n  const onChange = i => {\n    setForm({ ...form,\n      [i.target.name]: i.target.value\n    });\n  };\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    console.log(form);\n    e.target.reset();\n  };\n\n  const checkIsValid = (fieldName, value) => {\n    if (isValidData[fieldName] === value) {\n      return true;\n    }\n\n    return false;\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: classes.root,\n    autoComplete: \"off\",\n    onSubmit: handleSubmit,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 4,\n      children: [Object.keys(form).map((objKey, idx) => {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          md: 4,\n          children: /*#__PURE__*/_jsxDEV(TextField, {\n            error: !checkIsValid(objKey, form[objKey]),\n            helperText: \"No Value added in this field\",\n            id: `input${idx}`,\n            label: objKey,\n            name: objKey,\n            fullWidth: true,\n            onChange: onChange,\n            value: form[objKey]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, this)\n        }, idx, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, this);\n      }), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        md: 12,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          variant: \"contained\",\n          color: \"primary\",\n          children: \"Submit\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OperationForm, \"iHZzqGkkOfUsdxNPZns95cc+ORE=\", false, function () {\n  return [useStyles];\n});\n\n_c = OperationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationForm\");","map":{"version":3,"sources":["C:/Proyectos varios/personal-budget/src/components/OperationForm.js"],"names":["React","useState","makeStyles","TextField","Grid","Button","useStyles","theme","root","margin","spacing","OperationForm","classes","form","setForm","name","email","remember","isValidData","onChange","i","target","value","handleSubmit","e","preventDefault","console","log","reset","checkIsValid","fieldName","Object","keys","map","objKey","idx"],"mappings":"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","sourcesContent":["import React, { useState } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles'\r\nimport TextField from '@material-ui/core/TextField'\r\nimport Grid from '@material-ui/core/Grid'\r\nimport Button from '@material-ui/core/Button'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: { margin: theme.spacing(5) },\r\n}))\r\n\r\nexport default function OperationForm() {\r\n  const classes = useStyles()\r\n  const [form, setForm] = useState({\r\n    name: 'aaa',\r\n    email: 'bbb',\r\n    remember: 'ccc',\r\n  })\r\n  const isValidData = { name: 'aaa', email: 'bbb', remember: 'ccc' }\r\n\r\n  const onChange = (i) => {\r\n    setForm({ ...form, [i.target.name]: i.target.value })\r\n  }\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault()\r\n    console.log(form)\r\n    e.target.reset()\r\n  }\r\n\r\n  const checkIsValid = (fieldName, value) => {\r\n    if (isValidData[fieldName] === value) {\r\n      return true\r\n    }\r\n    return false\r\n  }\r\n\r\n  return (\r\n    <form className={classes.root} autoComplete=\"off\" onSubmit={handleSubmit}>\r\n      <Grid container spacing={4}>\r\n        {Object.keys(form).map((objKey, idx) => {\r\n          return (\r\n            <Grid item xs={12} sm={6} md={4} key={idx}>\r\n              <TextField\r\n                error={!checkIsValid(objKey, form[objKey])}\r\n                helperText=\"No Value added in this field\"\r\n                id={`input${idx}`}\r\n                label={objKey}\r\n                name={objKey}\r\n                fullWidth={true}\r\n                onChange={onChange}\r\n                value={form[objKey]}\r\n              />\r\n            </Grid>\r\n          )\r\n        })}\r\n        <Grid item xs={12} sm={12} md={12}>\r\n          <Button type=\"submit\" variant=\"contained\" color=\"primary\">\r\n            Submit\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </form>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"C:\\\\Proyectos varios\\\\personal-budget\\\\src\\\\components\\\\OperationForm.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '../@hookform/resolvers';\nimport * as Yup from 'yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction OperationForm() {\n  _s();\n\n  var _errors$title, _errors$firstName, _errors$lastName, _errors$dob, _errors$email, _errors$password, _errors$confirmPasswo, _errors$acceptTerms;\n\n  // form validation rules\n  const validationSchema = Yup.object().shape({\n    title: Yup.string().required('Title is required'),\n    firstName: Yup.string().required('First Name is required'),\n    lastName: Yup.string().required('Last name is required'),\n    dob: Yup.string().required('Date of Birth is required').matches(/^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/, 'Date of Birth must be a valid date in the format YYYY-MM-DD'),\n    email: Yup.string().required('Email is required').email('Email is invalid'),\n    password: Yup.string().min(6, 'Password must be at least 6 characters').required('Password is required'),\n    confirmPassword: Yup.string().oneOf([Yup.ref('password'), null], 'Passwords must match').required('Confirm Password is required'),\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Ts & Cs is required')\n  }); // functions to build form returned by useForm() hook\n\n  const {\n    register,\n    handleSubmit,\n    reset,\n    errors\n  } = useForm({\n    resolver: yupResolver(validationSchema)\n  });\n\n  function onSubmit(data) {\n    // display form data on success\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4));\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"card m-3\",\n    children: [/*#__PURE__*/_jsxDEV(\"h5\", {\n      className: \"card-header\",\n      children: \"React Form Validation Example with React Hook Form\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"card-body\",\n      children: /*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: handleSubmit(onSubmit),\n        onReset: reset,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"select\", {\n              name: \"title\",\n              ref: register,\n              className: `form-control ${errors.title ? 'is-invalid' : ''}`,\n              children: [/*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Mr\",\n                children: \"Mr\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Mrs\",\n                children: \"Mrs\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Miss\",\n                children: \"Miss\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"option\", {\n                value: \"Ms\",\n                children: \"Ms\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$title = errors.title) === null || _errors$title === void 0 ? void 0 : _errors$title.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"First Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"firstName\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.firstName ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$firstName = errors.firstName) === null || _errors$firstName === void 0 ? void 0 : _errors$firstName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col-5\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Last Name\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"lastName\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.lastName ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$lastName = errors.lastName) === null || _errors$lastName === void 0 ? void 0 : _errors$lastName.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Date of Birth\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"dob\",\n              type: \"date\",\n              ref: register,\n              className: `form-control ${errors.dob ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$dob = errors.dob) === null || _errors$dob === void 0 ? void 0 : _errors$dob.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Email\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"email\",\n              type: \"text\",\n              ref: register,\n              className: `form-control ${errors.email ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 101,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$email = errors.email) === null || _errors$email === void 0 ? void 0 : _errors$email.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-row\",\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 112,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"password\",\n              type: \"password\",\n              ref: register,\n              className: `form-control ${errors.password ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$password = errors.password) === null || _errors$password === void 0 ? void 0 : _errors$password.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 111,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"form-group col\",\n            children: [/*#__PURE__*/_jsxDEV(\"label\", {\n              children: \"Confirm Password\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n              name: \"confirmPassword\",\n              type: \"password\",\n              ref: register,\n              className: `form-control ${errors.confirmPassword ? 'is-invalid' : ''}`\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"invalid-feedback\",\n              children: (_errors$confirmPasswo = errors.confirmPassword) === null || _errors$confirmPasswo === void 0 ? void 0 : _errors$confirmPasswo.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group form-check\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            name: \"acceptTerms\",\n            type: \"checkbox\",\n            ref: register,\n            id: \"acceptTerms\",\n            className: `form-check-input ${errors.acceptTerms ? 'is-invalid' : ''}`\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"label\", {\n            for: \"acceptTerms\",\n            className: \"form-check-label\",\n            children: \"Accept Terms & Conditions\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"invalid-feedback\",\n            children: (_errors$acceptTerms = errors.acceptTerms) === null || _errors$acceptTerms === void 0 ? void 0 : _errors$acceptTerms.message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"form-group\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"submit\",\n            className: \"btn btn-primary mr-1\",\n            children: \"Register\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"btn btn-secondary\",\n            type: \"reset\",\n            children: \"Reset\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OperationForm, \"qahlAmGchmiE8cpD0qaxgZSVF8Q=\", false, function () {\n  return [useForm];\n});\n\n_c = OperationForm;\nexport default OperationFom;\n\nvar _c;\n\n$RefreshReg$(_c, \"OperationForm\");","map":{"version":3,"sources":["C:/Proyectos varios/personal-budget/src/components/OperationForm.js"],"names":["React","useForm","yupResolver","Yup","OperationForm","validationSchema","object","shape","title","string","required","firstName","lastName","dob","matches","email","password","min","confirmPassword","oneOf","ref","acceptTerms","bool","register","handleSubmit","reset","errors","resolver","onSubmit","data","alert","JSON","stringify","message","OperationFom"],"mappings":"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","sourcesContent":["import React from 'react'\r\nimport { useForm } from 'react-hook-form'\r\nimport { yupResolver } from '../@hookform/resolvers'\r\nimport * as Yup from 'yup'\r\n\r\nfunction OperationForm() {\r\n  // form validation rules\r\n  const validationSchema = Yup.object().shape({\r\n    title: Yup.string().required('Title is required'),\r\n    firstName: Yup.string().required('First Name is required'),\r\n    lastName: Yup.string().required('Last name is required'),\r\n    dob: Yup.string()\r\n      .required('Date of Birth is required')\r\n      .matches(\r\n        /^\\d{4}-(0[1-9]|1[012])-(0[1-9]|[12][0-9]|3[01])$/,\r\n        'Date of Birth must be a valid date in the format YYYY-MM-DD',\r\n      ),\r\n    email: Yup.string().required('Email is required').email('Email is invalid'),\r\n    password: Yup.string()\r\n      .min(6, 'Password must be at least 6 characters')\r\n      .required('Password is required'),\r\n    confirmPassword: Yup.string()\r\n      .oneOf([Yup.ref('password'), null], 'Passwords must match')\r\n      .required('Confirm Password is required'),\r\n    acceptTerms: Yup.bool().oneOf([true], 'Accept Ts & Cs is required'),\r\n  })\r\n\r\n  // functions to build form returned by useForm() hook\r\n  const { register, handleSubmit, reset, errors } = useForm({\r\n    resolver: yupResolver(validationSchema),\r\n  })\r\n\r\n  function onSubmit(data) {\r\n    // display form data on success\r\n    alert('SUCCESS!! :-)\\n\\n' + JSON.stringify(data, null, 4))\r\n  }\r\n\r\n  return (\r\n    <div className=\"card m-3\">\r\n      <h5 className=\"card-header\">\r\n        React Form Validation Example with React Hook Form\r\n      </h5>\r\n      <div className=\"card-body\">\r\n        <form onSubmit={handleSubmit(onSubmit)} onReset={reset}>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Title</label>\r\n              <select\r\n                name=\"title\"\r\n                ref={register}\r\n                className={`form-control ${errors.title ? 'is-invalid' : ''}`}\r\n              >\r\n                <option value=\"\"></option>\r\n                <option value=\"Mr\">Mr</option>\r\n                <option value=\"Mrs\">Mrs</option>\r\n                <option value=\"Miss\">Miss</option>\r\n                <option value=\"Ms\">Ms</option>\r\n              </select>\r\n              <div className=\"invalid-feedback\">{errors.title?.message}</div>\r\n            </div>\r\n            <div className=\"form-group col-5\">\r\n              <label>First Name</label>\r\n              <input\r\n                name=\"firstName\"\r\n                type=\"text\"\r\n                ref={register}\r\n                className={`form-control ${\r\n                  errors.firstName ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                {errors.firstName?.message}\r\n              </div>\r\n            </div>\r\n            <div className=\"form-group col-5\">\r\n              <label>Last Name</label>\r\n              <input\r\n                name=\"lastName\"\r\n                type=\"text\"\r\n                ref={register}\r\n                className={`form-control ${\r\n                  errors.lastName ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.lastName?.message}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Date of Birth</label>\r\n              <input\r\n                name=\"dob\"\r\n                type=\"date\"\r\n                ref={register}\r\n                className={`form-control ${errors.dob ? 'is-invalid' : ''}`}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.dob?.message}</div>\r\n            </div>\r\n            <div className=\"form-group col\">\r\n              <label>Email</label>\r\n              <input\r\n                name=\"email\"\r\n                type=\"text\"\r\n                ref={register}\r\n                className={`form-control ${errors.email ? 'is-invalid' : ''}`}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.email?.message}</div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-row\">\r\n            <div className=\"form-group col\">\r\n              <label>Password</label>\r\n              <input\r\n                name=\"password\"\r\n                type=\"password\"\r\n                ref={register}\r\n                className={`form-control ${\r\n                  errors.password ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <div className=\"invalid-feedback\">{errors.password?.message}</div>\r\n            </div>\r\n            <div className=\"form-group col\">\r\n              <label>Confirm Password</label>\r\n              <input\r\n                name=\"confirmPassword\"\r\n                type=\"password\"\r\n                ref={register}\r\n                className={`form-control ${\r\n                  errors.confirmPassword ? 'is-invalid' : ''\r\n                }`}\r\n              />\r\n              <div className=\"invalid-feedback\">\r\n                {errors.confirmPassword?.message}\r\n              </div>\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group form-check\">\r\n            <input\r\n              name=\"acceptTerms\"\r\n              type=\"checkbox\"\r\n              ref={register}\r\n              id=\"acceptTerms\"\r\n              className={`form-check-input ${\r\n                errors.acceptTerms ? 'is-invalid' : ''\r\n              }`}\r\n            />\r\n            <label for=\"acceptTerms\" className=\"form-check-label\">\r\n              Accept Terms & Conditions\r\n            </label>\r\n            <div className=\"invalid-feedback\">\r\n              {errors.acceptTerms?.message}\r\n            </div>\r\n          </div>\r\n          <div className=\"form-group\">\r\n            <button type=\"submit\" className=\"btn btn-primary mr-1\">\r\n              Register\r\n            </button>\r\n            <button className=\"btn btn-secondary\" type=\"reset\">\r\n              Reset\r\n            </button>\r\n          </div>\r\n        </form>\r\n      </div>\r\n    </div>\r\n  )\r\n}\r\n\r\nexport default OperationFom\r\n"]},"metadata":{},"sourceType":"module"}